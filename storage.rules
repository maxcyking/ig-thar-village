rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Images folder - public read, admin write
    match /images/{allPaths=**} {
      // Anyone can read images
      allow read: if true;
      
      // Only admins can upload/delete images
      allow write: if request.auth != null && 
        firestore.exists(/databases/(default)/documents/users/$(request.auth.uid)) &&
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Products folder - public read, admin write
    match /products/{allPaths=**} {
      // Anyone can read product images
      allow read: if true;
      
      // Only admins can upload/delete product images
      allow write: if request.auth != null && 
        firestore.exists(/databases/(default)/documents/users/$(request.auth.uid)) &&
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Gallery folder - public read, admin write
    match /gallery/{allPaths=**} {
      // Anyone can read gallery images
      allow read: if true;
      
      // Only admins can upload/delete gallery images
      allow write: if request.auth != null && 
        firestore.exists(/databases/(default)/documents/users/$(request.auth.uid)) &&
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Properties folder - public read, admin write
    match /properties/{allPaths=**} {
      // Anyone can read property images
      allow read: if true;
      
      // Only admins can upload/delete property images
      allow write: if request.auth != null && 
        firestore.exists(/databases/(default)/documents/users/$(request.auth.uid)) &&
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Services folder - public read, admin write
    match /services/{allPaths=**} {
      // Anyone can read service images
      allow read: if true;
      
      // Only admins can upload/delete service images
      allow write: if request.auth != null && 
        firestore.exists(/databases/(default)/documents/users/$(request.auth.uid)) &&
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Blogs folder - public read, admin write
    match /blogs/{allPaths=**} {
      // Anyone can read blog images
      allow read: if true;
      
      // Only admins can upload/delete blog images
      allow write: if request.auth != null && 
        firestore.exists(/databases/(default)/documents/users/$(request.auth.uid)) &&
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Media folder - public read, admin write
    match /media/{allPaths=**} {
      // Anyone can read media files
      allow read: if true;
      
      // Only admins can upload/delete media files
      allow write: if request.auth != null && 
        firestore.exists(/databases/(default)/documents/users/$(request.auth.uid)) &&
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Awards folder - public read, admin write
    match /awards/{allPaths=**} {
      // Anyone can read award files (certificates, images)
      allow read: if true;
      
      // Only admins can upload/delete award files
      allow write: if request.auth != null && 
        firestore.exists(/databases/(default)/documents/users/$(request.auth.uid)) &&
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Default deny all other files
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}